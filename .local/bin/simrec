#!/usr/bin/python3
"""
SimRec

A util script to record the simulator and automatically convert to `gif`
Requirements: python3 - xcrun - ffmpeg - convert
Usage:
    call ./bin/simrec and it will start recording the simulator,
    when you are ready, press Ctrl + C and this will automatically start the
    gif conversion using ffmpeg and covert to optimize gif storage.
Parameters:
    --device: the simulator device UUID (`booted` by default)
    --model: the optional model name (e.g. `iPhone 12`), the script will
             search automatically for the booted device with the given model
    --xscale: the resize scale (`320` by default)
    output: The output file name, required.
"""

import argparse
import subprocess
import signal
import sys
import json


XCRUN = '/usr/bin/xcrun'
FFMPEG = '/opt/homebrew/bin/ffmpeg'
RM = 'rm'


if __name__ == '__main__':
    # parse arguments
    parser = argparse.ArgumentParser()
    parser.add_argument('--device', default='booted')
    parser.add_argument('--model', default=None)
    parser.add_argument('--no-convert', action='store_true')
    parser.add_argument('--xscale', default='320')
    parser.add_argument('output', help='output file name')
    args = parser.parse_args()

    if '.' in args.output:
        sys.exit('''
Please don\'t use `.` in your output file name.
I'll add the extensions for you :)
''')

    # device
    device = args.device
    if args.model is not None:
        # if a model name was specified, look for it

        # get all devices
        devices = json.loads(subprocess.check_output([
            XCRUN,
            'simctl',
            'list',
            'devices',
            '-j'
        ]))['devices']

        # filter iOS devices and flatten array
        devices = [v for k, v in devices.items() if 'iOS' in k]
        devices = [d for v in devices for d in v]

        # find first booted with name
        for d in devices:
            if d['state'] == 'Booted' and args.model == d['name']:
                device = d['udid']
                break

        if device == args.device:
            print(f'Model {args.model} not found, using {args.device}')

    # record the simulator
    try:
        record = subprocess.Popen([
            XCRUN,
            'simctl',
            'io',
            device,
            'recordVideo',
            '--code=h264',
            f'{args.output}.mov'
        ])
        record.wait()
    except KeyboardInterrupt:
        # end recording
        record.send_signal(signal.SIGINT)

        # check if we want to convert
        if args.no_convert:
            exit(0)

        # convert to gif
        convert = subprocess.Popen([
            FFMPEG,
            '-i',
            f'{args.output}.mov',
            '-vf',
            f'scale={args.xscale}:-1',
            '-r',
            '10',
            f'{args.output}.gif'
        ])
        convert.wait()

        # remove video
        rm = subprocess.Popen([RM, f'{args.output}.mov'])
        rm.wait()
